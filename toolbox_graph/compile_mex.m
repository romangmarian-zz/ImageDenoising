mfileFolder = fileparts(mfilename('fullpath'));
mexPath=fullfile(mfileFolder,'mex');
cd(mexPath);

mex -DMX_COMPAT_32 perform_front_propagation_2d.cpp perform_front_propagation_2d_mex.cpp fheap/fib.cpp 
mex -DMX_COMPAT_32 perform_front_propagation_3d.cpp perform_front_propagation_3d_mex.cpp  fheap/fib.cpp 
mex -DMX_COMPAT_32 perform_circular_front_propagation_2d.cpp perform_front_propagation_2d.cpp fheap/fib.cpp 
mex -DMX_COMPAT_32 fm2dAniso.cpp

disp('Compiling perform_front_propagation_mesh, might take some time.');

files =  { ...
    'perform_front_propagation_mesh.cpp', ...
    'gw/gw_core/GW_Config.cpp',           ...
    'gw/gw_core/GW_FaceIterator.cpp',     ...
    'gw/gw_core/GW_SmartCounter.cpp',     ...
    'gw/gw_core/GW_VertexIterator.cpp',   ...
    'gw/gw_core/GW_Face.cpp',             ...
    'gw/gw_core/GW_Mesh.cpp',             ...
    'gw/gw_core/GW_Vertex.cpp',       ...
    'gw/gw_geodesic/GW_GeodesicFace.cpp', ...                                              
    'gw/gw_geodesic/GW_GeodesicMesh.cpp',     ...                                 
    'gw/gw_geodesic/GW_GeodesicPath.cpp',         ...                       
    'gw/gw_geodesic/GW_GeodesicPoint.cpp',            ...           
    'gw/gw_geodesic/GW_TriangularInterpolation_Cubic.cpp', ...      
    'gw/gw_geodesic/GW_GeodesicVertex.cpp',                    ...  
    'gw/gw_geodesic/GW_TriangularInterpolation_Linear.cpp',      ...
    'gw/gw_geodesic/GW_TriangularInterpolation_Quadratic.cpp',  ...
};

% Compose large mex compile string statement
str = 'mex '; %Initialize string statement with mex ....
for i=1:length(files)
    str = [str files{i} ' ']; %Append file name
end

eval(str); %Evaluate string statement

